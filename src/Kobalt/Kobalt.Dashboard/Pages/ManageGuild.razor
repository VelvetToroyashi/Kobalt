@page "/manage/{GuildID:long}"
@using Remora.Discord.API.Abstractions.Objects
@using Kobalt.Dashboard.Components
@using Humanizer
@layout DashboardLayout

@if (_guildState is GuildState.Unavailable)
{
    <ProblemView Message="Oh boy.">
        <MudText Typo="Typo.h5" Align="Align.Center">
            Looks like that guild either isn't available or the request failed. <br/>
            Refresh the page or try a different guild id.
        </MudText>
    </ProblemView>
}
else if (_guildState is GuildState.Loading)
{
    <MudContainer Style="align-items: center" MaxWidth="MaxWidth.Medium">
        <MudText Typo="Typo.h4">Loading some additional information...</MudText>
        <MudProgressLinear Color="Color.Tertiary" Indeterminate="true" Size="Size.Large" />
    </MudContainer>
}
else
{
    <MudText Typo="Typo.h3" GutterBottom="true">Currently viewing @(_guild!.Name)</MudText>
    <div style="margin-top: 20px"></div>
    <MudGrid>
        <MudItem Style="min-width: 250px; display: flex; flex-shrink: 2; flex-grow: 1; flex-basis: min-content;">
            <MudCard Elevation="0" Square="true" >
                <MudCardContent >
                    <MudText Typo="Typo.h4" GutterBottom="true">Welcome to Kobalt</MudText>
                    
                    <MudText Typo="Typo.subtitle1">
                        Kobalt is a moderation bot that aims to one-size fits most, without compromise. <br/> <br/>
                        It's currently in a very early stage of development, so expect bugs and missing features!
                    </MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem Style="display: flex; flex-grow: 3">
            <MudCard Style="flex-grow: 1;">
                <MudCardContent>
                    <MudText Typo="Typo.h5" GutterBottom="true">Recent Actions</MudText>
                    
                    @if (!_infractions?.IsSuccess ?? false)
                    {
                        <MudAlert Severity="Severity.Warning" ContentAlignment="HorizontalAlignment.Center">
                            Failed to fetch recent actions.
                        </MudAlert>
                    }
                    else if (_infractions is { IsSuccess: true, Entity: [] })
                    {
                        <MudAlert Severity="Severity.Success" ContentAlignment="HorizontalAlignment.Center">
                            No recent actions.
                        </MudAlert>
                    }
                    else
                    {
                        <MudTable T="InfractionView" ReadOnly="true" Items="@(_infractions?.Entity ?? Array.Empty<InfractionView>())" Loading="@(_infractions is null)">
                            <HeaderContent>
                                <MudTh>Type</MudTh>
                                <MudTh>Enforcer</MudTh>
                                <MudTh>Target</MudTh>
                                <MudTh>Created</MudTh>
                                <MudTh>Expires</MudTh>
                                <MudTh>Reason</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Type">@context.Type</MudTd>
                                <MudTd DataLabel="Enforcer">@context.Enforcer</MudTd>
                                <MudTd DataLabel="Target">@context.Target</MudTd>
                                <MudTd DataLabel="Created">@context.When.Humanize()</MudTd>
                                <MudTd DataLabel="Expires">@(@context.Expiration?.Humanize() ?? "Never")</MudTd>
                                <MudTd DataLabel="Reason">@context.Reason</MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem>
            <MudTabs >
                <MudTabPanel Text="Auto-Moderation" Icon="@Icons.Material.Filled.Security">
                    <MudContainer>
                        <MudTooltip Delay="250" Text="How many users are allowed to be in a channel before it's switched to Push-To-Talk.">
                            <MudNumericField T="int?" bind-Value="_kobaltGuild.AutoModConfig.PushToTalkThreshold" Variant="Variant.Text" Min="0" Label="Push To Talk Threshold"/>
                        </MudTooltip>
                    </MudContainer>
                </MudTabPanel>
                
                <MudTabPanel Text="Anti-Raid" Icon="@Icons.Material.Filled.PersonAddDisabled">
                    <MudContainer>
                        <MudCheckBox bind-Checked="_kobaltGuild.AntiRaidConfig.IsEnabled">Enabled</MudCheckBox>
                        <MudDatePicker Disabled="!_kobaltGuild.AntiRaidConfig.IsEnabled" bind ></MudDatePicker>
                    </MudContainer>
                </MudTabPanel>
                <MudTabPanel Text="Anti-Phishing" Icon="@Icons.Material.Filled.ManageSearch"></MudTabPanel>
                
                <MudTabPanel Text="Logging" Icon="@Icons.Material.Filled.Notes"></MudTabPanel>
            </MudTabs>
            
            <MudButton Color="Color.Info" Disabled="_isBusy" Class="mt-7" Variant="Variant.Filled">
                @if (_isBusy)
                {
                    <MudProgressCircular Size="Size.Small" />
                    <MudText>Updating...</MudText>
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.Save" />
                    <MudText>Save Changes</MudText>
                }
            </MudButton>
        </MudItem> 
    </MudGrid>
}